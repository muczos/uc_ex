global
    log /dev/log    local0
    log /dev/log    local1 notice
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin
    stats timeout 30s
    user haproxy
    group haproxy
    daemon

    # Default SSL material locations
    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private
    ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-default-bind-options prefer-client-ciphers no-sslv3 no-tlsv10 no-tlsv11 no-tlsv12 no-tls-tickets

    ssl-default-server-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-default-server-options no-sslv3 no-tlsv10 no-tlsv11 no-tlsv12 no-tls-tickets

defaults
    log     global
    mode    http
    option  httplog
    option  dontlognull
    timeout connect 5000
    timeout client  50000
    timeout server  50000
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

frontend front
    mode http
    bind :80
    http-request add-header X-Forwarded-Proto http
    http-request redirect scheme https unless { ssl_fc }

frontend front_tls
    mode http
    bind :443 ssl crt {{ cert_destination }}/{{ app_name }}.{{ app_url_suffix }}.pem alpn h2

{% for host in groups['nginx'] %}
    use_backend {{ hostvars[host].short_name }} if { path /{{ hostvars[host].short_name.split('-')[1] }} } || { path_beg /{{ hostvars[host].short_name.split('-')[1] }}/ }
{% endfor %}
    use_backend letsencrypt if { path_beg /.well-known/acme-challenge/ }
    default_backend nginx_all

backend nginx_all
    mode http
    balance roundrobin
    http-request add-header X-Forwarded-Proto https
    http-request add-header X-Forwarded-For %[src]
    option http-server-close
{% for host in groups['nginx'] %}
    server {{ hostvars[host].short_name }} {{ hostvars[host].private_addr }}:80 check
{% endfor %}

{% for host in groups['nginx'] %}
backend {{ hostvars[host].short_name }}
    mode http
    server {{ hostvars[host].short_name }} {{ hostvars[host].private_addr }}:80 check

{% endfor %}
backend letsencrypt
   server letsencrypt 127.0.0.1:{{ certbot_port }}


